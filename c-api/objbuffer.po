# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2020-02-18 10:54+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../c-api/objbuffer.rst:7
msgid "Old Buffer Protocol"
msgstr "Protocolo de Buffer Antigo"

#: ../../c-api/objbuffer.rst:9
msgid ""
"This section describes the legacy buffer protocol, which has been introduced"
" in Python 1.6. It is still supported but deprecated in the Python 2.x "
"series. Python 3 introduces a new buffer protocol which fixes weaknesses and"
" shortcomings of the protocol, and has been backported to Python 2.6.  See "
":ref:`bufferobjects` for more information."
msgstr ""

#: ../../c-api/objbuffer.rst:18
msgid ""
"Returns a pointer to a read-only memory location usable as character-based "
"input.  The *obj* argument must support the single-segment character buffer "
"interface.  On success, returns ``0``, sets *buffer* to the memory location "
"and *buffer_len* to the buffer length.  Returns ``-1`` and sets a "
":exc:`TypeError` on error."
msgstr ""
"Retorna um ponteiro para um local de memória somente leitura utilizável como"
" entrada baseada em caracteres. O argumento *obj* deve ter suporte a "
"interface do buffer de caracteres de segmento único. Em caso de sucesso, "
"retorna ``0``, define *buffer* com local da memória e *buffer_len* com o "
"tamanho do buffer. Retorna ``-1`` e define a :exc:`TypeError` em caso de "
"erro."

#: ../../c-api/objbuffer.rst:26 ../../c-api/objbuffer.rst:41
#: ../../c-api/objbuffer.rst:63
msgid ""
"This function used an :c:type:`int *` type for *buffer_len*. This might "
"require changes in your code for properly supporting 64-bit systems."
msgstr ""

#: ../../c-api/objbuffer.rst:33
msgid ""
"Returns a pointer to a read-only memory location containing arbitrary data. "
"The *obj* argument must support the single-segment readable buffer "
"interface.  On success, returns ``0``, sets *buffer* to the memory location "
"and *buffer_len* to the buffer length.  Returns ``-1`` and sets a "
":exc:`TypeError` on error."
msgstr ""
"Retorna um ponteiro para um local de memória somente leitura que contém "
"dados arbitrários. O argumento *obj* deve ter suporte à interface de buffer "
"legível de segmento único. Em caso de sucesso, retorna ``0``, define "
"*buffer* com o local da memória e *buffer_len* com o tamanho do buffer. "
"Retorna ``-1`` e define a :exc:`TypeError` em caso de erro."

#: ../../c-api/objbuffer.rst:48
msgid ""
"Returns ``1`` if *o* supports the single-segment readable buffer interface. "
"Otherwise returns ``0``."
msgstr ""

#: ../../c-api/objbuffer.rst:56
msgid ""
"Returns a pointer to a writeable memory location.  The *obj* argument must "
"support the single-segment, character buffer interface.  On success, returns"
" ``0``, sets *buffer* to the memory location and *buffer_len* to the buffer "
"length.  Returns ``-1`` and sets a :exc:`TypeError` on error."
msgstr ""
