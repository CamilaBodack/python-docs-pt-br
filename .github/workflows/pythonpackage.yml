name: Build and update documentation

# Daily at 0 am
on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    if: (github.event_name == 'schedule' && github.repository == 'python/python-docs-pt-br') || (github.event_name != 'schedule')

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: 3.8
    - run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies via package manager
      run: |
        sudo apt update
        sudo apt install -y gettext hunspell hunspell-pt-br
        msgfmt -V
        hunspell -v

    - name: Prepare virtual environment
      run: |
        make venv
        venv/bin/pip --version
        venv/bin/tx --version
        venv/bin/sphinx-intl --help
        venv/bin/powrap --version

    - name: If failed, make the log file an artifact
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: pip-install-log
        path: venv/pip-install.log

    - name: Recreate an up-to-date project .tx/config
      run: |
        make tx-config

    - name: Update translations from Transifex
      run: |
        if [[ -n "$TRANSIFEX_APIKEY" ]]; then
            echo -e "[https://www.transifex.com]\n"          \
                "api_hostname = https://api.transifex.com\n" \
                "hostname = https://www.transifex.com\n"     \
                "password = $TRANSIFEX_APIKEY\n"             \
                "username = api"                             \
                > ~/.transifexrc
        fi
        make pull
        git status --short
      env:
          TRANSIFEX_APIKEY: ${{ secrets.TRANSIFEX_APIKEY }}

    - name: Build documentation
      run: |
        make build CPYTHON_PATH=/tmp/cpython/ SPHINXERRORHANDLING=''

    - name: Push translations
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        make push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check spelling of translations
      run: |
        make spell
        cd .pospell/
        tar -czf ../pospell-out.tar.gz *.txt **/*.txt

    - name: Make spellchecking output available
      uses: actions/upload-artifact@v1
      with:
        name: spellchecking-output
        path: pospell-out.tar.gz

    - name: Merge translations with older branches
      run: make merge
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build documentation treating warnings as errors
      run: |
        make build CPYTHON_PATH=/tmp/cpython/
