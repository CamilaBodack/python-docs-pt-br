# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2020-04-02 13:01+0000\n"
"Last-Translator: Sheila Gomes <sheilagomes1@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/copy.rst:2
msgid ":mod:`copy` --- Shallow and deep copy operations"
msgstr ":mod:`copy` --- Operações de cópia profunda e cópia sombra"

#: ../../library/copy.rst:7
msgid ""
"Assignment statements in Python do not copy objects, they create bindings "
"between a target and an object. For collections that are mutable or contain "
"mutable items, a copy is sometimes needed so one can change one copy without "
"changing the other. This module provides generic shallow and deep copy "
"operations (explained below)."
msgstr ""
"As instruções de atribuição no Python não copiam objetos, elas criam "
"ligações entre um destino e um objeto. Para coleções que são mutáveis ​​ou "
"contêm itens mutáveis, às vezes é necessária uma cópia para que seja "
"possível alterar uma cópia sem alterar a outra. Este módulo fornece "
"operações genéricas de cópia profunda e rasa (explicadas abaixo)."

#: ../../library/copy.rst:14
msgid "Interface summary:"
msgstr "Sumário da Interface:"

#: ../../library/copy.rst:18
msgid "Return a shallow copy of *x*."
msgstr "Devolve uma cópia rasa de *x*."

#: ../../library/copy.rst:23
msgid "Return a deep copy of *x*."
msgstr "Retorna uma cópia profunda  de *x*."

#: ../../library/copy.rst:28
msgid "Raised for module specific errors."
msgstr "Levantada para erros específicos do módulo."

#: ../../library/copy.rst:31
msgid ""
"The difference between shallow and deep copying is only relevant for "
"compound objects (objects that contain other objects, like lists or class "
"instances):"
msgstr ""
"A diferença entre cópia profunda e rasa é relevante apenas para objetos "
"compostos (objetos que contêm outros objetos, como listas ou instâncias de "
"classe):"

#: ../../library/copy.rst:34
msgid ""
"A *shallow copy* constructs a new compound object and then (to the extent "
"possible) inserts *references* into it to the objects found in the original."
msgstr ""
"Uma *cópia rasa* constrói um novo objeto composto e então (na medida do "
"possível) insere nele *referências* aos objetos encontrados no original."

#: ../../library/copy.rst:37
msgid ""
"A *deep copy* constructs a new compound object and then, recursively, "
"inserts *copies* into it of the objects found in the original."
msgstr ""
"Uma *cópia profunda* constrói um novo objeto composto e então, "
"recursivamente, insere nele *cópias* dos objetos encontrados no original."

#: ../../library/copy.rst:40
msgid ""
"Two problems often exist with deep copy operations that don't exist with "
"shallow copy operations:"
msgstr ""
"Frequentemente, existem dois problemas com operações de cópia profunda que "
"não existem com operações de cópia rasa:"

#: ../../library/copy.rst:43
msgid ""
"Recursive objects (compound objects that, directly or indirectly, contain a "
"reference to themselves) may cause a recursive loop."
msgstr ""
"Objetos recursivos (objetos compostos que, direta ou indiretamente, contêm "
"uma referência a si mesmos) podem causar um laço recursivo."

#: ../../library/copy.rst:46
msgid ""
"Because deep copy copies everything it may copy too much, such as data which "
"is intended to be shared between copies."
msgstr ""
"Como a cópia profunda copia tudo, ela pode copiar muito, como dados que "
"devem ser compartilhados entre as cópias."

#: ../../library/copy.rst:49
msgid "The :func:`deepcopy` function avoids these problems by:"
msgstr "A função :func:`deepcopy` evita esses problemas:"

#: ../../library/copy.rst:51
msgid ""
"keeping a \"memo\" dictionary of objects already copied during the current "
"copying pass; and"
msgstr ""

#: ../../library/copy.rst:54
msgid ""
"letting user-defined classes override the copying operation or the set of "
"components copied."
msgstr ""
"permitindo que as classes definidas pelo usuário substituam a operação de "
"cópia ou o conjunto de componentes copiados."

#: ../../library/copy.rst:57
msgid ""
"This module does not copy types like module, method, stack trace, stack "
"frame, file, socket, window, array, or any similar types.  It does \"copy\" "
"functions and classes (shallow and deeply), by returning the original object "
"unchanged; this is compatible with the way these are treated by the :mod:"
"`pickle` module."
msgstr ""
"Este módulo não copia tipos como módulo, método, rastreamento de pilha, "
"quadro de pilha, arquivo, soquete, janela, matriz ou outros tipos "
"semelhantes. Ele \"copia\" funções e classes (rasas e profundas), devolvendo "
"o objeto original inalterado; isso é compatível com a maneira que estes "
"itens são tratados pelo módulo :mod:`pickle`."

#: ../../library/copy.rst:62
msgid ""
"Shallow copies of dictionaries can be made using :meth:`dict.copy`, and of "
"lists by assigning a slice of the entire list, for example, ``copied_list = "
"original_list[:]``."
msgstr ""
"Cópias rasas de dicionários podem ser feitas usando :meth:`dict.copy`, e de "
"listas atribuindo uma fatia de toda a lista, por exemplo, ``lista_copiada = "
"lista_original[:]``."

#: ../../library/copy.rst:66
msgid "Added copying functions."
msgstr ""

#: ../../library/copy.rst:71
msgid ""
"Classes can use the same interfaces to control copying that they use to "
"control pickling.  See the description of module :mod:`pickle` for "
"information on these methods.  The :mod:`copy` module does not use the :mod:"
"`copy_reg` registration module."
msgstr ""

#: ../../library/copy.rst:80
msgid ""
"In order for a class to define its own copy implementation, it can define "
"special methods :meth:`__copy__` and :meth:`__deepcopy__`.  The former is "
"called to implement the shallow copy operation; no additional arguments are "
"passed. The latter is called to implement the deep copy operation; it is "
"passed one argument, the memo dictionary.  If the :meth:`__deepcopy__` "
"implementation needs to make a deep copy of a component, it should call the :"
"func:`deepcopy` function with the component as first argument and the memo "
"dictionary as second argument."
msgstr ""

#: ../../library/copy.rst:92
msgid "Module :mod:`pickle`"
msgstr "Módulo :mod:`pickle`"

#: ../../library/copy.rst:92
msgid ""
"Discussion of the special methods used to support object state retrieval and "
"restoration."
msgstr ""
"Discussão dos métodos especiais usados ​​para dar suporte à recuperação e "
"restauração do estado do objeto."
