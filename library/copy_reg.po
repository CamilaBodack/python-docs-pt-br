# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-08-05 03:37+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/copy_reg.rst:2
msgid ":mod:`copy_reg` --- Register :mod:`pickle` support functions"
msgstr ""

#: ../../library/copy_reg.rst:8
msgid ""
"The :mod:`copy_reg` module has been renamed to :mod:`copyreg` in Python 3. "
"The :term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3."
msgstr ""

#: ../../library/copy_reg.rst:17
msgid ""
"The :mod:`copy_reg` module offers a way to define functions used while "
"pickling specific objects.  The :mod:`pickle`, :mod:`cPickle`, and "
":mod:`copy` modules use those functions when pickling/copying those objects."
"  The module provides configuration information about object constructors "
"which are not classes. Such constructors may be factory functions or class "
"instances."
msgstr ""

#: ../../library/copy_reg.rst:26
msgid ""
"Declares *object* to be a valid constructor.  If *object* is not callable "
"(and hence not valid as a constructor), raises :exc:`TypeError`."
msgstr ""
"Declara *object* para ser um construtor válido. Se *object* não puder ser "
"chamado (e, portanto, não for válido como um construtor), gera "
":exc:`TypeError`."

#: ../../library/copy_reg.rst:32
msgid ""
"Declares that *function* should be used as a \"reduction\" function for "
"objects of type *type*; *type* must not be a \"classic\" class object.  "
"(Classic classes are handled differently; see the documentation for the "
":mod:`pickle` module for details.)  *function* should return either a string"
" or a tuple containing two or three elements."
msgstr ""

#: ../../library/copy_reg.rst:38
msgid ""
"The optional *constructor* parameter, if provided, is a callable object "
"which can be used to reconstruct the object when called with the tuple of "
"arguments returned by *function* at pickling time.  :exc:`TypeError` will be"
" raised if *object* is a class or *constructor* is not callable."
msgstr ""
"O parâmetro opcional *constructor*, se fornecido, é um objeto que pode ser "
"chamado, que pode ser usado para reconstruir o objeto quando chamado com a "
"tupla de argumentos retornados por *function* no tempo de decapagem. "
":exc:`TypeError` será gerado se *object* for uma classe ou *constructor* não"
" for chamado."

#: ../../library/copy_reg.rst:43
msgid ""
"See the :mod:`pickle` module for more details on the interface expected of "
"*function* and *constructor*."
msgstr ""

#: ../../library/copy_reg.rst:47
msgid "Example"
msgstr "Exemplo"

#: ../../library/copy_reg.rst:49
msgid ""
"The example below would like to show how to register a pickle function and "
"how it will be used:"
msgstr ""
"O exemplo abaixo gostaria de mostrar como registrar uma função de pickle e "
"como ela será usada:"
