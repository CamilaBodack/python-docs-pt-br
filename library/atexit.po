# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/atexit.rst:2
msgid ":mod:`atexit` --- Exit handlers"
msgstr ":mod:`atexit` --- Manipuladores de Saída"

#: ../../library/atexit.rst:12
msgid "**Source code:** :source:`Lib/atexit.py`"
msgstr ""

#: ../../library/atexit.rst:16
msgid ""
"The :mod:`atexit` module defines a single function to register cleanup "
"functions.  Functions thus registered are automatically executed upon normal"
" interpreter termination.  :mod:`atexit` runs these functions in the "
"*reverse* order in which they were registered; if you register ``A``, ``B``,"
" and ``C``, at interpreter termination time they will be run in the order "
"``C``, ``B``, ``A``."
msgstr ""

#: ../../library/atexit.rst:23
msgid ""
"**Note:** The functions registered via this module are not called when the "
"program is killed by a signal not handled by Python, when a Python fatal "
"internal error is detected, or when :func:`os._exit` is called."
msgstr ""
"**Nota:** As funções registradas através deste módulo não são invocadas "
"quando o programa é morto por um sinal não tratado pelo Python, quando um "
"erro interno fatal do Python é detectado ou quando a função :func:`os._exit`"
" é invocada."

#: ../../library/atexit.rst:29
msgid ""
"This is an alternate interface to the functionality provided by the "
":func:`sys.exitfunc` variable."
msgstr ""

#: ../../library/atexit.rst:32
msgid ""
"Note: This module is unlikely to work correctly when used with other code "
"that sets ``sys.exitfunc``.  In particular, other core Python modules are "
"free to use :mod:`atexit` without the programmer's knowledge.  Authors who "
"use ``sys.exitfunc`` should convert their code to use :mod:`atexit` instead."
"  The simplest way to convert code that sets ``sys.exitfunc`` is to import "
":mod:`atexit` and register the function that had been bound to "
"``sys.exitfunc``."
msgstr ""

#: ../../library/atexit.rst:42
msgid ""
"Register *func* as a function to be executed at termination.  Any optional "
"arguments that are to be passed to *func* must be passed as arguments to "
":func:`register`.  It is possible to register the same function and "
"arguments more than once."
msgstr ""
"Registre *func* como uma função a ser executada no término. Qualquer o "
"argumento opcional que deve ser passado para *func* for passado como "
"argumento para :func:`register`. É possível registrar mais ou menos a mesma "
"função e argumentos."

#: ../../library/atexit.rst:47
msgid ""
"At normal program termination (for instance, if :func:`sys.exit` is called "
"or the main module's execution completes), all functions registered are "
"called in last in, first out order.  The assumption is that lower level "
"modules will normally be imported before higher level modules and thus must "
"be cleaned up later."
msgstr ""
"Na terminação normal do programa (por exemplo, se :func:`sys.exit` for "
"chamado ou a execução do módulo principal for concluída), todas as funções "
"registradas serão chamadas por último, pela primeira ordem. A suposição é "
"que os módulos de nível inferior normalmente serão importados antes dos "
"módulos de nível superior e, portanto, devem ser limpos posteriormente."

#: ../../library/atexit.rst:53
msgid ""
"If an exception is raised during execution of the exit handlers, a traceback"
" is printed (unless :exc:`SystemExit` is raised) and the exception "
"information is saved.  After all exit handlers have had a chance to run the "
"last exception to be raised is re-raised."
msgstr ""
"Se uma exceção é levantada durante a execução dos manipuladores de saída, um"
" traceback é impresso (a menos que :exc:`SystemExit` seja levantado) e as "
"informações de exceção sejam salvas. Depois de todos os manipuladores de "
"saída terem tido a chance de executar a última exceção a ser levantada, é "
"levantada novamente."

#: ../../library/atexit.rst:58
msgid ""
"This function now returns *func*, which makes it possible to use it as a "
"decorator."
msgstr ""

#: ../../library/atexit.rst:65
msgid "Module :mod:`readline`"
msgstr "Module :mod:`readline`"

#: ../../library/atexit.rst:66
msgid ""
"Useful example of :mod:`atexit` to read and write :mod:`readline` history "
"files."
msgstr ""
"Exemplo útil do módulo :mod:`atexit` para ler e escrever no módulo "
":mod:`readline` os arquivos de histórico."

#: ../../library/atexit.rst:72
msgid ":mod:`atexit` Example"
msgstr "Exemplo do :mod:`atexit`"

#: ../../library/atexit.rst:74
msgid ""
"The following simple example demonstrates how a module can initialize a "
"counter from a file when it is imported and save the counter's updated value"
" automatically when the program terminates without relying on the "
"application making an explicit call into this module at termination. ::"
msgstr ""
"O exemplo simples a seguir demonstra como um módulo pode inicializar um "
"contador de um arquivo quando ele é importado e salvar automaticamente o "
"valor atualizado do contador quando o programa termina, sem depender que o "
"aplicativo faça uma chamada explícita nesse módulo na finalização. ::"

#: ../../library/atexit.rst:94
msgid ""
"Positional and keyword arguments may also be passed to :func:`register` to "
"be passed along to the registered function when it is called::"
msgstr ""
"Os argumentos posicional e de palavra-chave também podem ser passados para "
":func:`register` para ser passada para a função registrada quando é chamada "
"::"

#: ../../library/atexit.rst:106
msgid "Usage as a :term:`decorator`::"
msgstr "Utilizado como um decorador de função :term:`decorator`::"

#: ../../library/atexit.rst:114
msgid "This only works with functions that can be called without arguments."
msgstr "Isso só funciona com funções que podem ser invocadas sem argumentos."
