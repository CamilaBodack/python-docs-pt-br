# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-11-10 12:08+0000\n"
"Last-Translator: Marcos Wenneton Araújo <mwvda.eng@uea.edu.br>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/os.path.rst:2
msgid ":mod:`os.path` --- Common pathname manipulations"
msgstr ":mod:`os.path` --- Manipulações comuns de nome nomes de caminhos"

#: ../../library/os.path.rst:9
msgid ""
"This module implements some useful functions on pathnames. To read or write "
"files see :func:`open`, and for accessing the filesystem see the :mod:`os` "
"module."
msgstr ""

#: ../../library/os.path.rst:15
msgid ""
"On Windows, many of these functions do not properly support UNC pathnames. :"
"func:`splitunc` and :func:`ismount` do handle them correctly."
msgstr ""

#: ../../library/os.path.rst:19
msgid ""
"Unlike a unix shell, Python does not do any *automatic* path expansions. "
"Functions such as :func:`expanduser` and :func:`expandvars` can be invoked "
"explicitly when an application desires shell-like path expansion.  (See also "
"the :mod:`glob` module.)"
msgstr ""
"Ao contrário de um shell Unix, Python não faz nenhuma expansão *automática* "
"de caminho. Funções como :func:`expanduser` e :func:`expandvars` podem ser "
"invocadas explicitamente quando uma aplicação deseja uma expansão de caminho "
"no estilo do shell. (Veja também o módulo :mod:`glob`.)"

#: ../../library/os.path.rst:26
msgid ""
"Since different operating systems have different path name conventions, "
"there are several versions of this module in the standard library.  The :mod:"
"`os.path` module is always the path module suitable for the operating system "
"Python is running on, and therefore usable for local paths.  However, you "
"can also import and use the individual modules if you want to manipulate a "
"path that is *always* in one of the different formats.  They all have the "
"same interface:"
msgstr ""
"Uma vez que diferentes sistemas operacionais têm diferentes convenções de "
"nome de caminho, existem várias versões deste módulo na biblioteca padrão. O "
"módulo :mod:`os.path` é sempre o módulo de caminho adequado para o sistema "
"operacional em que o Python está sendo executado e, portanto, pode ser usado "
"para caminhos locais. No entanto, você também pode importar e usar os "
"módulos individuais se quiser manipular um caminho que esteja *sempre* em um "
"dos diferentes formatos. Todos eles têm a mesma interface:"

#: ../../library/os.path.rst:34
msgid ":mod:`posixpath` for UNIX-style paths"
msgstr ":mod:`posixpath` para caminhos no estilo UNIX"

#: ../../library/os.path.rst:35
msgid ":mod:`ntpath` for Windows paths"
msgstr ":mod:`ntpath` para caminhos do Windows"

#: ../../library/os.path.rst:36
msgid ":mod:`macpath` for old-style MacOS paths"
msgstr ""

#: ../../library/os.path.rst:37
msgid ":mod:`os2emxpath` for OS/2 EMX paths"
msgstr ""

#: ../../library/os.path.rst:42
msgid ""
"Return a normalized absolutized version of the pathname *path*. On most "
"platforms, this is equivalent to calling the function :func:`normpath` as "
"follows: ``normpath(join(os.getcwd(), path))``."
msgstr ""
"Retorna uma versão normalizada e absolutizada do nome de caminho *path*. Na "
"maioria das plataformas, isso é equivalente a chamar a função :func:"
"`normpath` da seguinte forma: ``normpath(join(os.getcwd(), path))``."

#: ../../library/os.path.rst:51
msgid ""
"Return the base name of pathname *path*.  This is the second element of the "
"pair returned by passing *path* to the function :func:`split`.  Note that "
"the result of this function is different from the Unix :program:`basename` "
"program; where :program:`basename` for ``'/foo/bar/'`` returns ``'bar'``, "
"the :func:`basename` function returns an empty string (``''``)."
msgstr ""
"Retorna o nome base do caminho *path*. Este é o segundo elemento do par "
"retornado pela passagem de *path* para a função :func:`split`. Observe que o "
"resultado desta função é diferente do programa Unix :program:`basename`; "
"onde :program:`basename` para ``'/foo/bar/'`` retorna ``'bar'``, a função :"
"func:`basename` retorna uma string vazia (``''``)."

#: ../../library/os.path.rst:61
msgid ""
"Return the longest path prefix (taken character-by-character) that is a "
"prefix of all paths in  *list*.  If *list* is empty, return the empty string "
"(``''``). Note that this may return invalid paths because it works a "
"character at a time."
msgstr ""

#: ../../library/os.path.rst:68
msgid ""
"Return the directory name of pathname *path*.  This is the first element of "
"the pair returned by passing *path* to the function :func:`split`."
msgstr ""
"Retorna o nome do diretório do nome de caminho *path*. Este é o primeiro "
"elemento do par retornado passando *path* para a função :func:`split`."

#: ../../library/os.path.rst:74
msgid ""
"Return ``True`` if *path* refers to an existing path.  Returns ``False`` for "
"broken symbolic links. On some platforms, this function may return ``False`` "
"if permission is not granted to execute :func:`os.stat` on the requested "
"file, even if the *path* physically exists."
msgstr ""

#: ../../library/os.path.rst:82
msgid ""
"Return ``True`` if *path* refers to an existing path. Returns ``True`` for "
"broken symbolic links.   Equivalent to :func:`exists` on platforms lacking :"
"func:`os.lstat`."
msgstr ""
"Retorna ``True`` se *path* se referir a um caminho existente. Retorna "
"``True`` para links simbólicos quebrados. Equivalente a :func:`exists` em "
"plataformas sem :func:`os.lstat`."

#: ../../library/os.path.rst:91
msgid ""
"On Unix and Windows, return the argument with an initial component of ``~`` "
"or ``~user`` replaced by that *user*'s home directory."
msgstr ""
"No Unix e no Windows, retorna o argumento com um componente inicial de ``~`` "
"ou ``~user`` substituído pelo diretório inicial daquele usuário *user*."

#: ../../library/os.path.rst:96
msgid ""
"On Unix, an initial ``~`` is replaced by the environment variable :envvar:"
"`HOME` if it is set; otherwise the current user's home directory is looked "
"up in the password directory through the built-in module :mod:`pwd`. An "
"initial ``~user`` is looked up directly in the password directory."
msgstr ""
"No Unix, um ``~`` no início é substituído pela variável de ambiente :envvar:"
"`HOME` se estiver definida; caso contrário, o diretório pessoal do usuário "
"atual é procurado no diretório de senha através do módulo embutido :mod:"
"`pwd`. Um ``~user`` no início é procurado diretamente no diretório de senhas."

#: ../../library/os.path.rst:101
msgid ""
"On Windows, :envvar:`HOME` and :envvar:`USERPROFILE` will be used if set, "
"otherwise a combination of :envvar:`HOMEPATH` and :envvar:`HOMEDRIVE` will "
"be used.  An initial ``~user`` is handled by stripping the last directory "
"component from the created user path derived above."
msgstr ""

#: ../../library/os.path.rst:106
msgid ""
"If the expansion fails or if the path does not begin with a tilde, the path "
"is returned unchanged."
msgstr ""
"Se a expansão falhar ou se o caminho não começar com um til, o caminho será "
"retornado inalterado."

#: ../../library/os.path.rst:112
msgid ""
"Return the argument with environment variables expanded.  Substrings of the "
"form ``$name`` or ``${name}`` are replaced by the value of environment "
"variable *name*.  Malformed variable names and references to non-existing "
"variables are left unchanged."
msgstr ""
"Retorna o argumento com as variáveis de ambiente expandidas. Substrings da "
"forma ``$name`` ou ``${name}`` são substituídas pelo valor da variável de "
"ambiente *name*. Nomes de variáveis malformados e referências a variáveis "
"não existentes permanecem inalterados."

#: ../../library/os.path.rst:117
msgid ""
"On Windows, ``%name%`` expansions are supported in addition to ``$name`` and "
"``${name}``."
msgstr ""
"No Windows, expansões ``%name%`` são suportadas juntamente a ``$name`` e ``"
"${name}``."

#: ../../library/os.path.rst:123
msgid ""
"Return the time of last access of *path*.  The return value is a number "
"giving the number of seconds since the epoch (see the  :mod:`time` module).  "
"Raise :exc:`os.error` if the file does not exist or is inaccessible."
msgstr ""

#: ../../library/os.path.rst:129 ../../library/os.path.rst:142
msgid ""
"If :func:`os.stat_float_times` returns ``True``, the result is a floating "
"point number."
msgstr ""

#: ../../library/os.path.rst:136
msgid ""
"Return the time of last modification of *path*.  The return value is a "
"number giving the number of seconds since the epoch (see the  :mod:`time` "
"module). Raise :exc:`os.error` if the file does not exist or is inaccessible."
msgstr ""

#: ../../library/os.path.rst:149
msgid ""
"Return the system's ctime which, on some systems (like Unix) is the time of "
"the last metadata change, and, on others (like Windows), is the creation "
"time for *path*. The return value is a number giving the number of seconds "
"since the epoch (see the  :mod:`time` module).  Raise :exc:`os.error` if the "
"file does not exist or is inaccessible."
msgstr ""

#: ../../library/os.path.rst:160
msgid ""
"Return the size, in bytes, of *path*.  Raise :exc:`os.error` if the file "
"does not exist or is inaccessible."
msgstr ""

#: ../../library/os.path.rst:168
msgid ""
"Return ``True`` if *path* is an absolute pathname.  On Unix, that means it "
"begins with a slash, on Windows that it begins with a (back)slash after "
"chopping off a potential drive letter."
msgstr ""
"Retorna ``True`` se *path* for um nome de caminho absoluto. No Unix, isso "
"significa que começa com uma barra, no Windows começa com uma barra "
"(invertida) depois de eliminar uma possível letra de unidade."

#: ../../library/os.path.rst:175
msgid ""
"Return ``True`` if *path* is an existing regular file.  This follows "
"symbolic links, so both :func:`islink` and :func:`isfile` can be true for "
"the same path."
msgstr ""

#: ../../library/os.path.rst:181
msgid ""
"Return ``True`` if *path* is an existing directory.  This follows symbolic "
"links, so both :func:`islink` and :func:`isdir` can be true for the same "
"path."
msgstr ""

#: ../../library/os.path.rst:187
msgid ""
"Return ``True`` if *path* refers to a directory entry that is a symbolic "
"link. Always ``False`` if symbolic links are not supported by the Python "
"runtime."
msgstr ""

#: ../../library/os.path.rst:193
msgid ""
"Return ``True`` if pathname *path* is a :dfn:`mount point`: a point in a "
"file system where a different file system has been mounted.  The function "
"checks whether *path*'s parent, :file:`path/..`, is on a different device "
"than *path*, or whether :file:`path/..` and *path* point to the same i-node "
"on the same device --- this should detect mount points for all Unix and "
"POSIX variants."
msgstr ""

#: ../../library/os.path.rst:202
msgid ""
"Join one or more path components intelligently.  The return value is the "
"concatenation of *path* and any members of *\\*paths* with exactly one "
"directory separator (``os.sep``) following each non-empty part except the "
"last, meaning that the result will only end in a separator if the last part "
"is empty.  If a component is an absolute path, all previous components are "
"thrown away and joining continues from the absolute path component."
msgstr ""
"Junta um ou mais componentes do caminho de forma inteligente. O valor de "
"retorno é a concatenação de *path* e qualquer membro de *\\*paths* com "
"exatamente um separador de diretório (``os.sep``) seguindo cada parte não "
"vazia exceto a última, o que significa que o resultado só terminará em um "
"separador se a última parte estiver vazia. Se um componente for um caminho "
"absoluto, todos os componentes anteriores serão descartados e a união "
"continuará a partir do componente do caminho absoluto."

#: ../../library/os.path.rst:210
msgid ""
"On Windows, the drive letter is not reset when an absolute path component (e."
"g., ``r'\\foo'``) is encountered.  If a component contains a drive letter, "
"all previous components are thrown away and the drive letter is reset.  Note "
"that since there is a current directory for each drive, ``os.path.join(\"c:"
"\", \"foo\")`` represents a path relative to the current directory on drive :"
"file:`C:` (:file:`c:foo`), not :file:`c:\\\\foo`."
msgstr ""
"No Windows, a letra da unidade não é redefinida quando um componente de "
"caminho absoluto (por exemplo, ``r'\\foo'``) é encontrado. Se um componente "
"contiver uma letra de unidade, todos os componentes anteriores serão "
"descartados e a letra da unidade será redefinida. Observe que, como há um "
"diretório atual para cada unidade, ``os.path.join(\"c:\", \"foo\")`` "
"representa um caminho relativo ao diretório atual na unidade :file:`C:` (:"
"file:`c:foo`), e não :file:`c:\\\\foo`."

#: ../../library/os.path.rst:220
msgid ""
"Normalize the case of a pathname.  On Unix and Mac OS X, this returns the "
"path unchanged; on case-insensitive filesystems, it converts the path to "
"lowercase.  On Windows, it also converts forward slashes to backward slashes."
msgstr ""

#: ../../library/os.path.rst:227
msgid ""
"Normalize a pathname by collapsing redundant separators and up-level "
"references so that ``A//B``, ``A/B/``, ``A/./B`` and ``A/foo/../B`` all "
"become ``A/B``.  This string manipulation may change the meaning of a path "
"that contains symbolic links.  On Windows, it converts forward slashes to "
"backward slashes. To normalize case, use :func:`normcase`."
msgstr ""
"Normaliza um nome de caminho retirando separadores redundantes e referências "
"de nível superior para que ``A//B``, ``A/B/``, ``A/./B`` e ``A/foo/../B`` "
"todos se tornem ``A/B``. Essa manipulação de string pode mudar o significado "
"de um caminho que contém links simbólicos. No Windows, ele converte barras "
"normais em barras invertidas. Para normalizar o estado de letras maiúsculas/"
"minúsculas, use :func:`normcase`."

#: ../../library/os.path.rst:236
msgid ""
"Return the canonical path of the specified filename, eliminating any "
"symbolic links encountered in the path (if they are supported by the "
"operating system)."
msgstr ""
"Retorna o caminho canônico do nome do arquivo especificado, eliminando "
"quaisquer links simbólicos encontrados no caminho (se esses forem suportados "
"pelo sistema operacional)."

#: ../../library/os.path.rst:244
msgid ""
"Return a relative filepath to *path* either from the current directory or "
"from an optional *start* directory.  This is a path computation:  the "
"filesystem is not accessed to confirm the existence or nature of *path* or "
"*start*."
msgstr ""
"Retorna um caminho de arquivo relativo a *caminho* do diretório atual ou de "
"um diretório *start* opcional. Este é um cálculo de caminho: o sistema de "
"arquivos não é acessado para confirmar a existência ou natureza de *path* ou "
"*start*."

#: ../../library/os.path.rst:249
msgid "*start* defaults to :attr:`os.curdir`."
msgstr "*start* tem como padrão :attr:`os.curdir`."

#: ../../library/os.path.rst:251
msgid "Availability:  Windows, Unix."
msgstr ""

#: ../../library/os.path.rst:258
msgid ""
"Return ``True`` if both pathname arguments refer to the same file or "
"directory (as indicated by device number and i-node number). Raise an "
"exception if an :func:`os.stat` call on either pathname fails."
msgstr ""

#: ../../library/os.path.rst:262 ../../library/os.path.rst:269
#: ../../library/os.path.rst:279
msgid "Availability: Unix."
msgstr "Disponibilidade: Unix."

#: ../../library/os.path.rst:267
msgid ""
"Return ``True`` if the file descriptors *fp1* and *fp2* refer to the same "
"file."
msgstr ""
"Retorna ``True`` se os descritores de arquivo *fp1* e *fp2* fazem referência "
"ao mesmo arquivo."

#: ../../library/os.path.rst:274
msgid ""
"Return ``True`` if the stat tuples *stat1* and *stat2* refer to the same "
"file. These structures may have been returned by :func:`os.fstat`, :func:`os."
"lstat`, or :func:`os.stat`.  This function implements the underlying "
"comparison used by :func:`samefile` and :func:`sameopenfile`."
msgstr ""
"Retorna ``True`` se as tuplas de estatísticas *stat1* e *stat2* fazem "
"referência ao mesmo arquivo. Essas estruturas podem ter sido retornadas por :"
"func:`os.fstat`, :func:`os.lstat` ou :func:`os.stat`. Esta função implementa "
"a comparação subjacente usada por :func:`samefile` e :func:`sameopenfile`."

#: ../../library/os.path.rst:284
msgid ""
"Split the pathname *path* into a pair, ``(head, tail)`` where *tail* is the "
"last pathname component and *head* is everything leading up to that.  The "
"*tail* part will never contain a slash; if *path* ends in a slash, *tail* "
"will be empty.  If there is no slash in *path*, *head* will be empty.  If "
"*path* is empty, both *head* and *tail* are empty.  Trailing slashes are "
"stripped from *head* unless it is the root (one or more slashes only).  In "
"all cases, ``join(head, tail)`` returns a path to the same location as "
"*path* (but the strings may differ).  Also see the functions :func:`dirname` "
"and :func:`basename`."
msgstr ""
"Divide o caminho *path* em um par, ``(cabeça, rabo)`` onde *rabo* é o último "
"componente do nome do caminho e *cabeça* é tudo o que leva a isso. A parte "
"*rabo* nunca conterá uma barra; se *path* terminar com uma barra, *tail* "
"ficará vazio. Se não houver uma barra no *path*, o *head* ficará vazio. Se "
"*path* estiver vazio, *cabeça* e *rabo* estarão vazios. As barras finais são "
"retiradas da *cabeça*, a menos que seja a raiz (uma ou mais barras apenas). "
"Em todos os casos, ``join(cabeça, rabo)`` retorna um caminho para o mesmo "
"local que *path* (mas as strings podem ser diferentes). Veja também as "
"funções :func:`dirname` e :func:`basename`."

#: ../../library/os.path.rst:297
msgid ""
"Split the pathname *path* into a pair ``(drive, tail)`` where *drive* is "
"either a drive specification or the empty string.  On systems which do not "
"use drive specifications, *drive* will always be the empty string.  In all "
"cases, ``drive + tail`` will be the same as *path*."
msgstr ""

#: ../../library/os.path.rst:307
msgid ""
"Split the pathname *path* into a pair ``(root, ext)``  such that ``root + "
"ext == path``, and *ext* is empty or begins with a period and contains at "
"most one period. Leading periods on the basename are  ignored; ``splitext('."
"cshrc')`` returns  ``('.cshrc', '')``."
msgstr ""
"Divide o nome de caminho *path* em um par ``(root, ext)`` de tal forma que "
"``root + ext == path``, e *ext* esteja vazio ou inicia com um ponto e contém "
"no máximo um ponto. Pontos no início do nome base são ignorados; "
"``splitext('.cshrc')`` retorna  ``('.cshrc', '')``."

#: ../../library/os.path.rst:312
msgid ""
"Earlier versions could produce an empty root when the only period was the "
"first character."
msgstr ""

#: ../../library/os.path.rst:319
msgid ""
"Split the pathname *path* into a pair ``(unc, rest)`` so that *unc* is the "
"UNC mount point (such as ``r'\\\\host\\mount'``), if present, and *rest* the "
"rest of the path (such as  ``r'\\path\\file.ext'``).  For paths containing "
"drive letters, *unc* will always be the empty string."
msgstr ""

#: ../../library/os.path.rst:324
msgid "Availability:  Windows."
msgstr ""

#: ../../library/os.path.rst:329
msgid ""
"Calls the function *visit* with arguments ``(arg, dirname, names)`` for each "
"directory in the directory tree rooted at *path* (including *path* itself, "
"if it is a directory).  The argument *dirname* specifies the visited "
"directory, the argument *names* lists the files in the directory (gotten "
"from ``os.listdir(dirname)``). The *visit* function may modify *names* to "
"influence the set of directories visited below *dirname*, e.g. to avoid "
"visiting certain parts of the tree.  (The object referred to by *names* must "
"be modified in place, using :keyword:`del` or slice assignment.)"
msgstr ""

#: ../../library/os.path.rst:340
msgid ""
"Symbolic links to directories are not treated as subdirectories, and that :"
"func:`walk` therefore will not visit them. To visit linked directories you "
"must identify them with ``os.path.islink(file)`` and ``os.path."
"isdir(file)``, and invoke :func:`walk` as necessary."
msgstr ""

#: ../../library/os.path.rst:347
msgid ""
"This function is deprecated and has been removed in Python 3 in favor of :"
"func:`os.walk`."
msgstr ""

#: ../../library/os.path.rst:353
msgid ""
"``True`` if arbitrary Unicode strings can be used as file names (within "
"limitations imposed by the file system)."
msgstr ""
"``True`` se strings Unicode arbitrárias podem ser usadas como nomes de "
"arquivo (dentro das limitações impostas pelo sistema de arquivos)."
