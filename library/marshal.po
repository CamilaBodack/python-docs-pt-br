# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: Adorilson Bezerra <adorilson@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/marshal.rst:3
msgid ":mod:`marshal` --- Internal Python object serialization"
msgstr ":mod:`marshal` --- Serialização interna de objetos Python"

#: ../../library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Sun, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""
"Este módulo contém funções que podem ler e gravar valores Python em formato "
"binário. O formato é específico para Python, mas independente dos problemas "
"de arquitetura da máquina (por exemplo, você pode gravar um valor Python em "
"um arquivo em um PC, transportar o arquivo para um Sun e lê-lo de volta lá). "
"Os detalhes do formato não são documentados propositalmente; ele pode mudar "
"entre as versões do Python (embora raramente mude). [#]_"

#: ../../library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise.  If "
"you're serializing and de-serializing Python objects, use the :mod:`pickle` "
"module instead -- the performance is comparable, version independence is "
"guaranteed, and pickle supports a substantially wider range of objects than "
"marshal."
msgstr ""
"Este não é um módulo de \"persistência\" geral. Para persistência geral e "
"transferência de objetos Python através de chamadas RPC, veja os módulos :"
"mod:`pickle` e :mod:`shelve`. O módulo :mod:`marshal` existe principalmente "
"para ter suporte à leitura e escrita do código \"pseudocompilado\" para "
"módulos Python de arquivos :file:`.pyc`. Portanto, os mantenedores do Python "
"se reservam o direito de modificar o formato do marshal de maneiras "
"incompatíveis com versões anteriores, caso seja necessário. Se você estiver "
"serializando e desserializando objetos Python, use o módulo :mod:`pickle` -- "
"o desempenho é comparável, a independência de versão é garantida e pickle "
"tem suporte a uma gama substancialmente maior de objetos do que marshal."

#: ../../library/marshal.rst:33
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
"O módulo :mod:`marshal` não se destina a ser seguro contra dados errôneos ou "
"construídos de forma maliciosa. Nunca faça o unmarshalling de dados "
"recebidos de uma fonte não confiável ou não autenticada."

#: ../../library/marshal.rst:39
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, long integers, floating point numbers, complex numbers, strings, "
"Unicode objects, tuples, lists, sets, frozensets, dictionaries, and code "
"objects, where it should be understood that tuples, lists, sets, frozensets "
"and dictionaries are only supported as long as the values contained therein "
"are themselves supported; and recursive lists, sets and dictionaries should "
"not be written (they will cause infinite loops).  The singletons :const:"
"`None`, :const:`Ellipsis` and :exc:`StopIteration` can also be marshalled "
"and unmarshalled."
msgstr ""

#: ../../library/marshal.rst:52
msgid ""
"On machines where C's ``long int`` type has more than 32 bits (such as the "
"DEC Alpha), it is possible to create plain Python integers that are longer "
"than 32 bits. If such an integer is marshaled and read back in on a machine "
"where C's ``long int`` type has only 32 bits, a Python long integer object "
"is returned instead.  While of a different type, the numeric value is the "
"same.  (This behavior is new in Python 2.2.  In earlier versions, all but "
"the least-significant 32 bits of the value were lost, and a warning message "
"was printed.)"
msgstr ""

#: ../../library/marshal.rst:61
msgid ""
"There are functions that read/write files as well as functions operating on "
"strings."
msgstr ""

#: ../../library/marshal.rst:64
msgid "The module defines these functions:"
msgstr "O módulo define estas funções:"

#: ../../library/marshal.rst:69
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be an open file object such as ``sys.stdout`` or returned by :func:"
"`open` or :func:`os.popen`.  It may not be a wrapper such as TemporaryFile "
"on Windows. It must be opened in binary mode (``'wb'`` or ``'w+b'``)."
msgstr ""

#: ../../library/marshal.rst:75
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`."
msgstr ""
"Se o valor tem (ou contém um objeto que tem) um tipo não suportado, uma "
"exceção :exc:`ValueError` é levantada -- mas dados de lixo também serão "
"gravados no arquivo. O objeto não será lido corretamente por :func:`load`."

#: ../../library/marshal.rst:79
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"O argumento *version* indica o formato de dados que o ``dump`` deve usar "
"(veja abaixo)."

#: ../../library/marshal.rst:86
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  The "
"file must be an open file object opened in binary mode (``'rb'`` or ``'r"
"+b'``)."
msgstr ""

#: ../../library/marshal.rst:94
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"Se um objeto contendo um tipo não suportado foi empacotado com :func:"
"`dump`, :func:`load` irá substituir ``None`` pelo tipo não empacotável."

#: ../../library/marshal.rst:100
msgid ""
"Return the string that would be written to a file by ``dump(value, file)``.  "
"The value must be a supported type.  Raise a :exc:`ValueError` exception if "
"value has (or contains an object that has) an unsupported type."
msgstr ""

#: ../../library/marshal.rst:104
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"O argumento *version* indica o formato de dados que ``dumps`` deve usar "
"(veja abaixo)."

#: ../../library/marshal.rst:111
msgid ""
"Convert the string to a value.  If no valid value is found, raise :exc:"
"`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  Extra characters in the "
"string are ignored."
msgstr ""

#: ../../library/marshal.rst:116
msgid "In addition, the following constants are defined:"
msgstr "Além disso, as seguintes constantes são definidas:"

#: ../../library/marshal.rst:120
msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 (added in Python 2.4) shares interned strings and version "
"2 (added in Python 2.5) uses a binary format for floating point numbers. The "
"current version is 2."
msgstr ""

#: ../../library/marshal.rst:129
msgid "Footnotes"
msgstr "Notas de Rodapé"

#: ../../library/marshal.rst:130
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"O nome deste módulo deriva de um pouco da terminologia usada pelos designers "
"do Modula-3 (entre outros), que usam o termo \"marshalling\" para enviar "
"dados em um formato independente. Estritamente falando, \"to marshal\" "
"significa converter alguns dados da forma interna para a externa (em um "
"buffer RPC, por exemplo) e \"unmarshalling\" para o processo reverso."
