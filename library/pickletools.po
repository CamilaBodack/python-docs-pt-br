# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2015-11-28 19:33+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/pickletools.rst:2
msgid ":mod:`pickletools` --- Tools for pickle developers"
msgstr ":mod:`pickletools` --- Ferramentas para desenvolvedores pickle"

#: ../../library/pickletools.rst:11
msgid "**Source code:** :source:`Lib/pickletools.py`"
msgstr "**Código Fonte:** :source:`Lib/pickletools.py`"

#: ../../library/pickletools.rst:15
msgid ""
"This module contains various constants relating to the intimate details of "
"the :mod:`pickle` module, some lengthy comments about the implementation, "
"and a few useful functions for analyzing pickled data.  The contents of this "
"module are useful for Python core developers who are working on the :mod:"
"`pickle` and :mod:`cPickle` implementations; ordinary users of the :mod:"
"`pickle` module probably won't find the :mod:`pickletools` module relevant."
msgstr ""

#: ../../library/pickletools.rst:25
msgid ""
"Outputs a symbolic disassembly of the pickle to the file-like object *out*, "
"defaulting to ``sys.stdout``.  *pickle* can be a string or a file-like "
"object. *memo* can be a Python dictionary that will be used as the pickle's "
"memo; it can be used to perform disassemblies across multiple pickles "
"created by the same pickler. Successive levels, indicated by ``MARK`` "
"opcodes in the stream, are indented by *indentlevel* spaces."
msgstr ""

#: ../../library/pickletools.rst:35
msgid ""
"Provides an :term:`iterator` over all of the opcodes in a pickle, returning "
"a sequence of ``(opcode, arg, pos)`` triples.  *opcode* is an instance of "
"an :class:`OpcodeInfo` class; *arg* is the decoded value, as a Python "
"object, of the opcode's argument; *pos* is the position at which this opcode "
"is located. *pickle* can be a string or a file-like object."
msgstr ""
"Fornece um :term:`iterador` sobre todos os códigos de operação em um pickle, "
"retornando uma sequência de triplos ``(opcode, arg, pos)``. *opcode* é uma "
"instância de uma classe :class:`OpcodeInfo`; *arg* é o valor decodificado, "
"como um objeto Python, do argumento do opcode; *pos* é a posição em que este "
"código de operação está localizado. *pickle* pode ser uma string ou um "
"objeto arquivo ou similar."

#: ../../library/pickletools.rst:43
msgid ""
"Returns a new equivalent pickle string after eliminating unused ``PUT`` "
"opcodes. The optimized pickle is shorter, takes less transmission time, "
"requires less storage space, and unpickles more efficiently."
msgstr ""
"Retorna uma nova string pickle equivalente após eliminar códigos de operação "
"``PUT`` não utilizados. O pickle otimizado é mais curto, leva menos tempo de "
"transmissão, requer menos espaço de armazenamento e efetua unpickling com "
"mais eficiência."
