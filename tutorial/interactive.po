# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2017
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: Adorilson Bezerra <adorilson@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "Edição de entrada interativa e substituição de histórico"

#: ../../tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current input "
"line and history substitution, similar to facilities found in the Korn shell "
"and the GNU Bash shell.  This is implemented using the `GNU Readline`_ "
"library, which supports Emacs-style and vi-style editing.  This library has "
"its own documentation which I won't duplicate here; however, the basics are "
"easily explained.  The interactive editing and history described here are "
"optionally available in the Unix and Cygwin versions of the interpreter."
msgstr ""
"Algumas versões do interpretador Python suportam facilidades de edição e "
"substituição\n"
"semelhantes às encontradas na shell Korn ou na GNU Bash. Isso é "
"implementado\n"
"através da biblioteca `GNU Readline`_, que suporta edição no estilo Emacs ou "
"vi.\n"
"Essa biblioteca possui sua própria documentação, que não será duplicada "
"aqui. Porém\n"
"os fundamentos são fáceis de serem explicados. As facilidades aqui descritas "
"estão\n"
"disponíveis nas versões Unix e Cygwin do interpretador."

#: ../../tutorial/interactive.rst:15
msgid ""
"This chapter does *not* document the editing facilities of Mark Hammond's "
"PythonWin package or the Tk-based environment, IDLE, distributed with "
"Python. The command line history recall which operates within DOS boxes on "
"NT and some other DOS and Windows flavors  is yet another beast."
msgstr ""
"Este capítulo *não* documenta as facilidades de edição do pacote PythonWin "
"de\n"
"Mark Hammond, ou do ambiente IDLE baseado em Tk e distribuído junto com\n"
"Python. A recuperação de histórico da linha de comando do DOS ou NT e "
"outros\n"
"sabores de DOS e Windows também são bichos diferentes."

#: ../../tutorial/interactive.rst:24
msgid "Line Editing"
msgstr "Edição de linha"

#: ../../tutorial/interactive.rst:26
msgid ""
"If supported, input line editing is active whenever the interpreter prints a "
"primary or secondary prompt.  The current line can be edited using the "
"conventional Emacs control characters.  The most important of these are: :"
"kbd:`C-A` (Control-A) moves the cursor to the beginning of the line, :kbd:`C-"
"E` to the end, :kbd:`C-B` moves it one position to the left, :kbd:`C-F` to "
"the right.  Backspace erases the character to the left of the cursor, :kbd:"
"`C-D` the character to its right. :kbd:`C-K` kills (erases) the rest of the "
"line to the right of the cursor, :kbd:`C-Y` yanks back the last killed "
"string. :kbd:`C-underscore` undoes the last change you made; it can be "
"repeated for cumulative effect."
msgstr ""
"Se instalada, a edição de linha está ativa sempre que o interpretador "
"exibir\n"
"um dos prompts (primário ou secundário). A linha atual pode ser editada\n"
"usando comandos típicos do Emacs. Os mais importantes são: :kbd:`C-A`\n"
"(Control-A) move o cursor para o início da linha, :kbd:`C-E` para o fim,\n"
":kbd:`C-B` move uma posição para à esquerda, :kbd:`C-F` para a direita.\n"
":kbd:`Backspace` apaga o caractere à esquerda, :kbd:`C-D` apaga o da "
"direita.\n"
":kbd:`C-K` apaga do cursor até o resto da linha à direita, :kbd:`C-Y` cola "
"a\n"
"linha apagada. :kbd:`C-underscore` desfaz a última alteração que você fez; "
"e\n"
"pode ser repetido com efeito cumulativo."

#: ../../tutorial/interactive.rst:41
msgid "History Substitution"
msgstr "Substituição por histórico"

#: ../../tutorial/interactive.rst:43
msgid ""
"History substitution works as follows.  All non-empty input lines issued are "
"saved in a history buffer, and when a new prompt is given you are positioned "
"on a new line at the bottom of this buffer. :kbd:`C-P` moves one line up "
"(back) in the history buffer, :kbd:`C-N` moves one down.  Any line in the "
"history buffer can be edited; an asterisk appears in front of the prompt to "
"mark a line as modified.  Pressing the :kbd:`Return` key passes the current "
"line to the interpreter.  :kbd:`C-R` starts an incremental reverse search; :"
"kbd:`C-S` starts a forward search."
msgstr ""
"Funciona da seguinte maneira: todas linhas não vazias são armazenadas em um\n"
"buffer de histórico, e ao digitar uma nova linha no prompt você está "
"editando\n"
"a última linha deste buffer. :kbd:`C-P` retrocede uma linha no histórico,\n"
":kbd:`C-N` avança uma linha. Qualquer linha desse histórico pode ser "
"editada;\n"
"quando você faz isso, um astesrico aparece na frente do prompt. "
"Pressionando\n"
":kbd:`Enter` a linha atual é enviada para o interpretador. :kbd:`C-R` "
"inicia\n"
"uma busca para trás no histórico, e :kbd:`C-S` faz uma busca para frente. "
"[#]_"

#: ../../tutorial/interactive.rst:56
msgid "Key Bindings"
msgstr "Definição de atalhos"

#: ../../tutorial/interactive.rst:58
msgid ""
"The key bindings and some other parameters of the Readline library can be "
"customized by placing commands in an initialization file called :file:`~/."
"inputrc`.  Key bindings have the form ::"
msgstr ""
"Atalhos de teclado e outros parâmetros da biblioteca Readline podem ser\n"
"personalizados colocando configurações no arquivo :file:`~/.inputrc`.\n"
"A definição de atalhos tem o formato ::"

#: ../../tutorial/interactive.rst:64
msgid "or ::"
msgstr "ou ::"

#: ../../tutorial/interactive.rst:68
msgid "and options can be set with ::"
msgstr "e opções podem ser especificadas com ::"

#: ../../tutorial/interactive.rst:72
msgid "For example::"
msgstr "Por exemplo::"

#: ../../tutorial/interactive.rst:85
msgid ""
"Note that the default binding for :kbd:`Tab` in Python is to insert a :kbd:"
"`Tab` character instead of Readline's default filename completion function.  "
"If you insist, you can override this by putting ::"
msgstr ""
"Observe que a definição padrão para :kbd:`Tab` em Python é inserir um "
"caractere\n"
":kbd:`Tab` ao invés de completar o nome de um arquivo (padrão no Readline). "
"Isto\n"
"pode ser reconfigurado de volta colocando:"

#: ../../tutorial/interactive.rst:91
msgid ""
"in your :file:`~/.inputrc`.  (Of course, this makes it harder to type "
"indented continuation lines if you're accustomed to using :kbd:`Tab` for "
"that purpose.)"
msgstr ""
"em seu :file:`~/.inputrc`. Todavia, isto torna mais difícil digitar "
"comandos\n"
"indentados em linhas de continuação se você estiver acostumado a usar :kbd:"
"`Tab`\n"
"para isso."

#: ../../tutorial/interactive.rst:98
msgid ""
"Automatic completion of variable and module names is optionally available.  "
"To enable it in the interpreter's interactive mode, add the following to "
"your startup file: [#]_  ::"
msgstr ""
"O preenchimento automático de nomes de variáveis e módulos estão "
"opcionalmente\n"
"disponíveis. Para habilitá-los no modo interativo, adicione o seguinte ao "
"seu\n"
"arquivo de inicialização: [#]_ ::"

#: ../../tutorial/interactive.rst:105
msgid ""
"This binds the :kbd:`Tab` key to the completion function, so hitting the :"
"kbd:`Tab` key twice suggests completions; it looks at Python statement "
"names, the current local variables, and the available module names.  For "
"dotted expressions such as ``string.a``, it will evaluate the expression up "
"to the final ``'.'`` and then suggest completions from the attributes of the "
"resulting object.  Note that this may execute application-defined code if an "
"object with a :meth:`__getattr__` method is part of the expression."
msgstr ""
"Isso vincula a tecla :kbd:`Tab` para o preenchimento automático de nomes de\n"
"função. Assim, teclar :kbd:`Tab` duas vezes dispara o preenchimento,\n"
"procurando um determinado nome entre as variáveis locais e módulos\n"
"disponíveis. Para expressões terminadas em ponto, como em ``string.a``, a\n"
"expressão será avaliada até o último ``'.'`` quando serão sugeridos "
"possíveis\n"
"complementos. Note que isso pode executar código da sua aplicação quando um\n"
"objeto que define o método :meth:`__getattr__` fizer parte da expressão."

#: ../../tutorial/interactive.rst:113
msgid ""
"A more capable startup file might look like this example.  Note that this "
"deletes the names it creates once they are no longer needed; this is done "
"since the startup file is executed in the same namespace as the interactive "
"commands, and removing the names avoids creating side effects in the "
"interactive environment.  You may find it convenient to keep some of the "
"imported modules, such as :mod:`os`, which turn out to be needed in most "
"sessions with the interpreter. ::"
msgstr ""
"Um arquivo de inicialização mais completo seria algo como esse exemplo. "
"Note\n"
"que ele deleta os nomes que cria quando não são mais necessários; isso é "
"feito\n"
"porque o arquivo de inicialização é executado no mesmo ambiente dos "
"comandos\n"
"interativos, e remover os nomes evita criar efeitos colaterais no ambiente\n"
"interativo. Você pode achar conveniente manter alguns dos módulos "
"importados,\n"
"como :mod:`os`, que acaba sendo necessário na maior parte das sessões com o\n"
"interpretador. ::"

#: ../../tutorial/interactive.rst:149
msgid "Alternatives to the Interactive Interpreter"
msgstr "Alternativas ao interpretador interativo"

#: ../../tutorial/interactive.rst:151
msgid ""
"This facility is an enormous step forward compared to earlier versions of "
"the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows if "
"an indent token is required next).  The completion mechanism might use the "
"interpreter's symbol table.  A command to check (or even suggest) matching "
"parentheses, quotes, etc., would also be useful."
msgstr ""
"Esta facilidade é um enorme passo em frente em comparação com as versões "
"anteriores do intérpretador; No entanto, alguns desejos são deixados: seria "
"bom se a indentação adequada fosse sugerida nas linhas de continuação (o "
"analisador sabe se é necessário um token de recuo). O mecanismo de conclusão "
"pode usar a tabela de símbolos do intérprete. Um comando para verificar (ou "
"mesmo sugerir) parênteses, citações, etc., também seria útil."

#: ../../tutorial/interactive.rst:158
msgid ""
"One alternative enhanced interactive interpreter that has been around for "
"quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar enhanced "
"interactive environment is bpython_."
msgstr ""
"Um intérprete interativo aprimorado e alternativo que existe há algum tempo "
"é o IPython_, que apresenta a conclusão da guia, a exploração de objetos e o "
"gerenciamento de histórico avançado. Também pode ser completamente "
"personalizado e incorporado em outras aplicações. Outro ambiente interativo "
"aprimorado similar é bpython_."

#: ../../tutorial/interactive.rst:166
msgid "Footnotes"
msgstr "Notas de Rodapé"

#: ../../tutorial/interactive.rst:167
msgid ""
"Python will execute the contents of a file identified by the :envvar:"
"`PYTHONSTARTUP` environment variable when you start an interactive "
"interpreter.  To customize Python even for non-interactive mode, see :ref:"
"`tut-customize`."
msgstr ""
"[#] Python executará o conteúdo do arquivo identificado pela variável de "
"ambiente :envvar:`PYTHONSTARTUP` quando se inicia o interpretador no modo  "
"interativo. Para personalizar Python no modo não-interativo,  veja :ref:`tut-"
"customize`."
